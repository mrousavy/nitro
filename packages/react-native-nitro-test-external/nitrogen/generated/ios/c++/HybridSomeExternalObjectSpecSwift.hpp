///
/// HybridSomeExternalObjectSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridSomeExternalObjectSpec.hpp"

// Forward declaration of `HybridSomeExternalObjectSpec_cxx` to properly resolve imports.
namespace NitroTestExternal { class HybridSomeExternalObjectSpec_cxx; }



#include <string>

#include "NitroTestExternal-Swift-Cxx-Umbrella.hpp"

namespace margelo::nitro::test::external {

  /**
   * The C++ part of HybridSomeExternalObjectSpec_cxx.swift.
   *
   * HybridSomeExternalObjectSpecSwift (C++) accesses HybridSomeExternalObjectSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridSomeExternalObjectSpec_cxx can directly inherit from the C++ class HybridSomeExternalObjectSpec
   * to simplify the whole structure and memory management.
   */
  class HybridSomeExternalObjectSpecSwift: public virtual HybridSomeExternalObjectSpec {
  public:
    // Constructor from a Swift instance
    explicit HybridSomeExternalObjectSpecSwift(const NitroTestExternal::HybridSomeExternalObjectSpec_cxx& swiftPart):
      HybridObject(HybridSomeExternalObjectSpec::TAG),
      _swiftPart(swiftPart) { }

  public:
    // Get the Swift part
    inline NitroTestExternal::HybridSomeExternalObjectSpec_cxx& getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    inline size_t getExternalMemorySize() noexcept override {
      return _swiftPart.getMemorySize();
    }
    void dispose() noexcept override {
      _swiftPart.dispose();
    }

  public:
    // Properties
    

  public:
    // Methods
    inline std::string getValue() override {
      auto __result = _swiftPart.getValue();
      if (__result.hasError()) [[unlikely]] {
        std::rethrow_exception(__result.error());
      }
      auto __value = std::move(__result.value());
      return __value;
    }

  private:
    NitroTestExternal::HybridSomeExternalObjectSpec_cxx _swiftPart;
  };

} // namespace margelo::nitro::test::external
