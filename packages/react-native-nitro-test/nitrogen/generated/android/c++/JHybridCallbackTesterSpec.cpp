///
/// JHybridCallbackTesterSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridCallbackTesterSpec.hpp"

// Forward declaration of `HybridCallbackBuilderSpec` to properly resolve imports.
namespace margelo::nitro::test { class HybridCallbackBuilderSpec; }
// Forward declaration of `MyCallback` to properly resolve imports.
namespace margelo::nitro::test { struct MyCallback; }

#include <memory>
#include "HybridCallbackBuilderSpec.hpp"
#include "JHybridCallbackBuilderSpec.hpp"
#include "MyCallback.hpp"
#include "JMyCallback.hpp"
#include <string>
#include <functional>
#include "JFunc_void_std__string.hpp"
#include <NitroModules/ArrayBuffer.hpp>
#include "JFunc_void_std__shared_ptr_ArrayBuffer_.hpp"
#include <NitroModules/JArrayBuffer.hpp>
#include <NitroModules/JUnit.hpp>

namespace margelo::nitro::test {

  jni::local_ref<JHybridCallbackTesterSpec::jhybriddata> JHybridCallbackTesterSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridCallbackTesterSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridCallbackTesterSpec::initHybrid),
    });
  }

  size_t JHybridCallbackTesterSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridCallbackTesterSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  // Properties
  

  // Methods
  std::shared_ptr<HybridCallbackBuilderSpec> JHybridCallbackTesterSpec::createBuilder(const MyCallback& callback) {
    static const auto method = javaClassStatic()->getMethod<jni::local_ref<JHybridCallbackBuilderSpec::javaobject>(jni::alias_ref<JMyCallback> /* callback */)>("createBuilder");
    auto __result = method(_javaPart, JMyCallback::fromCpp(callback));
    return __result->cthis()->shared_cast<JHybridCallbackBuilderSpec>();
  }

} // namespace margelo::nitro::test
