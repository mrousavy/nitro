///
/// JVariant_Double_Boolean.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JVariant_Double_Boolean.hpp"

namespace margelo::nitro::test {
  std::variant<double, bool> JVariant_Double_Boolean::toCpp() const {
    if (isInstanceOf(JVariant_Double_Boolean_impl::First::javaClassStatic())) {
      auto jniValue = static_cast<const JVariant_Double_Boolean_impl::First*>(this)->getValue();
      return jniValue;
    } else if (isInstanceOf(JVariant_Double_Boolean_impl::Second::javaClassStatic())) {
      auto jniValue = static_cast<const JVariant_Double_Boolean_impl::Second*>(this)->getValue();
      return static_cast<bool>(jniValue);
    }
    throw std::invalid_argument("Variant is unknown Kotlin instance!");
  }
} // namespace margelo::nitro::test
