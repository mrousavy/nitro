///
/// JHybridPlatformObjectSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "JHybridPlatformObjectSpec.hpp"



#include <string>

namespace margelo::nitro::test {

  jni::local_ref<JHybridPlatformObjectSpec::jhybriddata> JHybridPlatformObjectSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridPlatformObjectSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridPlatformObjectSpec::initHybrid),
    });
  }

  size_t JHybridPlatformObjectSpec::getExternalMemorySize() noexcept {
    static const auto method = javaClassStatic()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  void JHybridPlatformObjectSpec::dispose() noexcept {
    static const auto method = javaClassStatic()->getMethod<void()>("dispose");
    method(_javaPart);
  }

  std::string JHybridPlatformObjectSpec::toString() {
    static const auto method = javaClassStatic()->getMethod<jni::JString()>("toString");
    auto javaString = method(_javaPart);
    return javaString->toStdString();
  }

  // Properties
  

  // Methods
  std::string JHybridPlatformObjectSpec::getOSVersion() {
    static const auto method = javaClassStatic()->getMethod<jni::local_ref<jni::JString>()>("getOSVersion");
    auto __result = method(_javaPart);
    return __result->toStdString();
  }

} // namespace margelo::nitro::test
