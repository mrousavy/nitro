///
/// JHybridViewWithChildrenStateUpdater.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#ifndef RN_SERIALIZABLE_STATE
#error NitroTest was compiled without the 'RN_SERIALIZABLE_STATE' flag. This flag is required for Nitro Views - set it in your CMakeLists!
#endif

#include <fbjni/fbjni.h>
#include <react/fabric/StateWrapperImpl.h>
#include <react/fabric/CoreComponentsRegistry.h>
#include <react/renderer/core/ConcreteComponentDescriptor.h>
#include <NitroModules/NitroDefines.hpp>
#include <NitroModules/JStateWrapper.hpp>
#include "JHybridViewWithChildrenSpec.hpp"
#include "views/HybridViewWithChildrenComponent.hpp"

namespace margelo::nitro::test::views {

using namespace facebook;

class JHybridViewWithChildrenStateUpdater: public jni::JavaClass<JHybridViewWithChildrenStateUpdater> {
public:
  static constexpr auto kJavaDescriptor = "Lcom/margelo/nitro/test/views/HybridViewWithChildrenStateUpdater;";

public:
  static void updateViewProps(jni::alias_ref<jni::JClass> /* class */,
                              jni::alias_ref<JHybridViewWithChildrenSpec::javaobject> view,
                              jni::alias_ref<JStateWrapper::javaobject> stateWrapperInterface);

public:
  static void registerNatives() {
    // Register JNI calls
    javaClassStatic()->registerNatives({
      makeNativeMethod("updateViewProps", JHybridViewWithChildrenStateUpdater::updateViewProps),
    });
    // Register React Native view component descriptor
    auto provider = react::concreteComponentDescriptorProvider<HybridViewWithChildrenComponentDescriptor>();
    auto providerRegistry = react::CoreComponentsRegistry::sharedProviderRegistry();
    providerRegistry->add(provider);
  }
};

} // namespace margelo::nitro::test::views
