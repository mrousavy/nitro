///
/// CoreTypesVariant.kt
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

package com.margelo.nitro.test

import com.facebook.proguard.annotations.DoNotStrip
import com.margelo.nitro.core.ArrayBuffer
import com.margelo.nitro.core.Promise
import com.margelo.nitro.core.AnyMap

/**
 * Represents the TypeScript variant "ArrayBuffer | (value: Double) -> Unit | WrappedJsStruct | java.time.Instant | Promise<Double> | AnyMap".
 */
@Suppress("ClassName")
@DoNotStrip
sealed class CoreTypesVariant {
  @DoNotStrip
  data class First(@DoNotStrip val value: ArrayBuffer): CoreTypesVariant()
  @DoNotStrip
  data class Second(@DoNotStrip val value: Func_void_double): CoreTypesVariant()
  @DoNotStrip
  data class Third(@DoNotStrip val value: WrappedJsStruct): CoreTypesVariant()
  @DoNotStrip
  data class Fourth(@DoNotStrip val value: java.time.Instant): CoreTypesVariant()
  @DoNotStrip
  data class Fifth(@DoNotStrip val value: Promise<Double>): CoreTypesVariant()
  @DoNotStrip
  data class Sixth(@DoNotStrip val value: AnyMap): CoreTypesVariant()

  @Deprecated("getAs() is not type-safe. Use fold/asFirstOrNull/asSecondOrNull instead.", level = DeprecationLevel.ERROR)
  inline fun <reified T> getAs(): T? = when (this) {
    is First -> value as? T
    is Second -> value as? T
    is Third -> value as? T
    is Fourth -> value as? T
    is Fifth -> value as? T
    is Sixth -> value as? T
  }

  val isFirst: Boolean
    get() = this is First
  val isSecond: Boolean
    get() = this is Second
  val isThird: Boolean
    get() = this is Third
  val isFourth: Boolean
    get() = this is Fourth
  val isFifth: Boolean
    get() = this is Fifth
  val isSixth: Boolean
    get() = this is Sixth

  fun asFirstOrNull(): ArrayBuffer? {
    val value = (this as? First)?.value ?: return null
    return value
  }
  fun asSecondOrNull(): ((value: Double) -> Unit)? {
    val value = (this as? Second)?.value ?: return null
    return value
  }
  fun asThirdOrNull(): WrappedJsStruct? {
    val value = (this as? Third)?.value ?: return null
    return value
  }
  fun asFourthOrNull(): java.time.Instant? {
    val value = (this as? Fourth)?.value ?: return null
    return value
  }
  fun asFifthOrNull(): Promise<Double>? {
    val value = (this as? Fifth)?.value ?: return null
    return value
  }
  fun asSixthOrNull(): AnyMap? {
    val value = (this as? Sixth)?.value ?: return null
    return value
  }

  inline fun <R> match(first: (ArrayBuffer) -> R, second: ((value: Double) -> Unit) -> R, third: (WrappedJsStruct) -> R, fourth: (java.time.Instant) -> R, fifth: (Promise<Double>) -> R, sixth: (AnyMap) -> R): R {
    return when (this) {
      is First -> first(value)
      is Second -> second(value)
      is Third -> third(value)
      is Fourth -> fourth(value)
      is Fifth -> fifth(value)
      is Sixth -> sixth(value)
    }
  }

  companion object {
    @JvmStatic
    @DoNotStrip
    fun create(value: ArrayBuffer): CoreTypesVariant = First(value)
    @JvmStatic
    @DoNotStrip
    fun create(value: Func_void_double): CoreTypesVariant = Second(value)
    @JvmStatic
    @DoNotStrip
    fun create(value: WrappedJsStruct): CoreTypesVariant = Third(value)
    @JvmStatic
    @DoNotStrip
    fun create(value: java.time.Instant): CoreTypesVariant = Fourth(value)
    @JvmStatic
    @DoNotStrip
    fun create(value: Promise<Double>): CoreTypesVariant = Fifth(value)
    @JvmStatic
    @DoNotStrip
    fun create(value: AnyMap): CoreTypesVariant = Sixth(value)
  }
}
