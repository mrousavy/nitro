///
/// HybridTestViewSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridTestViewSpec.hpp"

namespace margelo::nitro::test {

  void HybridTestViewSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter(PropName::string("isBlue"), &HybridTestViewSpec::getIsBlue);
      prototype.registerHybridSetter(PropName::string("isBlue"), &HybridTestViewSpec::setIsBlue);
      prototype.registerHybridGetter(PropName::string("hasBeenCalled"), &HybridTestViewSpec::getHasBeenCalled);
      prototype.registerHybridSetter(PropName::string("hasBeenCalled"), &HybridTestViewSpec::setHasBeenCalled);
      prototype.registerHybridGetter(PropName::string("colorScheme"), &HybridTestViewSpec::getColorScheme);
      prototype.registerHybridSetter(PropName::string("colorScheme"), &HybridTestViewSpec::setColorScheme);
      prototype.registerHybridGetter(PropName::string("someCallback"), &HybridTestViewSpec::getSomeCallback);
      prototype.registerHybridSetter(PropName::string("someCallback"), &HybridTestViewSpec::setSomeCallback);
      prototype.registerHybridMethod(PropName::string("someMethod"), &HybridTestViewSpec::someMethod);
    });
  }

} // namespace margelo::nitro::test
