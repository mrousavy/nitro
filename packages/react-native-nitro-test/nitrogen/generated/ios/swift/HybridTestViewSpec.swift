///
/// HybridTestViewSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridTestViewSpec``
public protocol HybridTestViewSpec_protocol: HybridObject, HybridView {
  // Properties
  var isBlue: Bool { get set }
  var hasBeenCalled: Bool { get set }
  var colorScheme: ColorScheme { get set }
  var someCallback: () -> Void { get set }

  // Methods
  func someMethod() throws -> Void
}

public extension HybridTestViewSpec_protocol {
  /// Default implementation of ``HybridObject.toString``
  func toString() -> String {
    return "[HybridObject TestView]"
  }
}

open class HybridTestViewSpec_base {
  public typealias bridge = margelo.nitro.test.bridge.swift

  public init() { }

  

  open func getCxxPart() -> bridge.std__shared_ptr_HybridTestViewSpec_ {
    let __unsafe = Unmanaged.passRetained(self).toOpaque()
    let __cxxPart = bridge.create_std__shared_ptr_HybridTestViewSpec_(__unsafe)
    return __cxxPart
  }
}

public typealias HybridTestViewSpec = HybridTestViewSpec_protocol & HybridTestViewSpec_base
