///
/// HybridSomeExternalObjectSubclassSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules
import NitroTestExternal

/// See ``HybridSomeExternalObjectSubclassSpec``
public protocol HybridSomeExternalObjectSubclassSpec_protocol: HybridObject, HybridSomeExternalObjectSpec_protocol {
  // Properties
  var isSubclass: Bool { get }

  // Methods
  
}

public extension HybridSomeExternalObjectSubclassSpec_protocol {
  /// Default implementation of ``HybridObject.toString``
  func toString() -> String {
    return "[HybridObject SomeExternalObjectSubclass]"
  }
}

/// See ``HybridSomeExternalObjectSubclassSpec``
open class HybridSomeExternalObjectSubclassSpec_base: HybridSomeExternalObjectSpec_base {
  private weak var cxxWrapper: HybridSomeExternalObjectSubclassSpec_cxx? = nil
  public override init() { super.init() }
  open override func getCxxWrapper() -> HybridSomeExternalObjectSubclassSpec_cxx {
  #if DEBUG
    guard self is HybridSomeExternalObjectSubclassSpec else {
      fatalError("`self` is not a `HybridSomeExternalObjectSubclassSpec`! Did you accidentally inherit from `HybridSomeExternalObjectSubclassSpec_base` instead of `HybridSomeExternalObjectSubclassSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridSomeExternalObjectSubclassSpec_cxx(self as! HybridSomeExternalObjectSubclassSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the SomeExternalObjectSubclass HybridObject.
 * Implement this protocol to create Swift-based instances of SomeExternalObjectSubclass.
 * ```swift
 * class HybridSomeExternalObjectSubclass : HybridSomeExternalObjectSubclassSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridSomeExternalObjectSubclassSpec = HybridSomeExternalObjectSubclassSpec_protocol & HybridSomeExternalObjectSubclassSpec_base
