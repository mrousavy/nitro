///
/// NitroTest-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `AnyMap` to properly resolve imports.
namespace NitroModules { class AnyMap; }
// Forward declaration of `ArrayBuffer` to properly resolve imports.
namespace NitroModules { class ArrayBuffer; }
// Forward declaration of `Car` to properly resolve imports.
namespace margelo::nitro::test { struct Car; }
// Forward declaration of `ColorScheme` to properly resolve imports.
namespace margelo::nitro::test { enum class ColorScheme; }
// Forward declaration of `HybridBaseSpec` to properly resolve imports.
namespace margelo::nitro::test { class HybridBaseSpec; }
// Forward declaration of `HybridChildSpec` to properly resolve imports.
namespace margelo::nitro::test { class HybridChildSpec; }
// Forward declaration of `HybridTestObjectSwiftKotlinSpec` to properly resolve imports.
namespace margelo::nitro::test { class HybridTestObjectSwiftKotlinSpec; }
// Forward declaration of `HybridTestViewSpec` to properly resolve imports.
namespace margelo::nitro::test { class HybridTestViewSpec; }
// Forward declaration of `JsStyleStruct` to properly resolve imports.
namespace margelo::nitro::test { struct JsStyleStruct; }
// Forward declaration of `MapWrapper` to properly resolve imports.
namespace margelo::nitro::test { struct MapWrapper; }
// Forward declaration of `OldEnum` to properly resolve imports.
namespace margelo::nitro::test { enum class OldEnum; }
// Forward declaration of `Person` to properly resolve imports.
namespace margelo::nitro::test { struct Person; }
// Forward declaration of `Powertrain` to properly resolve imports.
namespace margelo::nitro::test { enum class Powertrain; }

// Include C++ defined types
#include "Car.hpp"
#include "ColorScheme.hpp"
#include "HybridBaseSpec.hpp"
#include "HybridChildSpec.hpp"
#include "HybridTestObjectSwiftKotlinSpec.hpp"
#include "HybridTestViewSpec.hpp"
#include "JsStyleStruct.hpp"
#include "MapWrapper.hpp"
#include "OldEnum.hpp"
#include "Person.hpp"
#include "Powertrain.hpp"
#include <NitroModules/AnyMap.hpp>
#include <NitroModules/ArrayBuffer.hpp>
#include <NitroModules/Promise.hpp>
#include <NitroModules/Result.hpp>
#include <chrono>
#include <exception>
#include <functional>
#include <memory>
#include <optional>
#include <string>
#include <unordered_map>
#include <variant>
#include <vector>

// C++ helpers for Swift
#include "NitroTest-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapUtils.hpp>
#include <NitroModules/RuntimeError.hpp>
#include <NitroModules/DateToChronoDate.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridBaseSpec_cxx` to properly resolve imports.
namespace NitroTest { class HybridBaseSpec_cxx; }
// Forward declaration of `HybridChildSpec_cxx` to properly resolve imports.
namespace NitroTest { class HybridChildSpec_cxx; }
// Forward declaration of `HybridTestObjectSwiftKotlinSpec_cxx` to properly resolve imports.
namespace NitroTest { class HybridTestObjectSwiftKotlinSpec_cxx; }
// Forward declaration of `HybridTestViewSpec_cxx` to properly resolve imports.
namespace NitroTest { class HybridTestViewSpec_cxx; }

// Include Swift defined types
#if __has_include("NitroTest-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "NitroTest".
#include "NitroTest-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<NitroTest/NitroTest-Swift.h>)
#include <NitroTest/NitroTest-Swift.h>
#else
#error NitroTest's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "NitroTest", and try building the app first.
#endif
