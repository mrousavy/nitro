///
/// HybridChildSpecSwift.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include "HybridChildSpec.hpp"

#include <string>
#include "Car.hpp"
#include <variant>
#include "Powertrain.hpp"
#include "Person.hpp"
#include <optional>
#include <vector>
#include "HybridBaseSpecSwift.hpp"

namespace margelo::nitro::test {

  /**
   * The C++ part of HybridChildSpec_cxx.swift.
   *
   * HybridChildSpecSwift (C++) accesses HybridChildSpec_cxx (Swift), and might
   * contain some additional bridging code for C++ <> Swift interop.
   *
   * Since this obviously introduces an overhead, I hope at some point in
   * the future, HybridChildSpec_cxx can directly inherit from the C++ class HybridChildSpec
   * to simplify the whole structure and memory management.
   */
  class HybridChildSpecSwift: public virtual HybridChildSpec, public virtual HybridBaseSpecSwift {
  public:
    // Constructor from an unmanaged Swift instance. This retains +1
    explicit HybridChildSpecSwift(void* NON_NULL /* unretained */ swiftPart);
    // Destructor calls release -1 in Swift
    ~HybridChildSpecSwift() override;
    // Copy & Move is deleted
    HybridChildSpecSwift(const HybridChildSpecSwift&) = delete;
    HybridChildSpecSwift(HybridChildSpecSwift&&) = delete;

  public:
    // Get the Swift part
    inline void* NON_NULL getSwiftPart() noexcept {
      return _swiftPart;
    }

  public:
    // Base HybridObject overrides
    size_t getExternalMemorySize() noexcept override;
    void dispose() noexcept override;
    std::string toString() override;
    bool equals(const std::shared_ptr<HybridObject>& other) override;

  public:
    // Properties
    double getChildValue() noexcept override;

  public:
    // Methods
    std::variant<std::string, Car> bounceVariant(const std::variant<std::string, Car>& variant) override;

  private:
    void* NON_NULL /* retained */ _swiftPart;
  };

} // namespace margelo::nitro::test
