///
/// HybridTestObjectTSXSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridTestObjectTSXSpec``
public protocol HybridTestObjectTSXSpec_protocol: HybridObject {
  // Properties
  var testValue: Double { get }

  // Methods
  
}

/// See ``HybridTestObjectTSXSpec``
public class HybridTestObjectTSXSpec_base {
  private weak var cxxWrapper: HybridTestObjectTSXSpec_cxx? = nil
  public func getCxxWrapper() -> HybridTestObjectTSXSpec_cxx {
  #if DEBUG
    guard self is HybridTestObjectTSXSpec else {
      fatalError("`self` is not a `HybridTestObjectTSXSpec`! Did you accidentally inherit from `HybridTestObjectTSXSpec_base` instead of `HybridTestObjectTSXSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridTestObjectTSXSpec_cxx(self as! HybridTestObjectTSXSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the TestObjectTSX HybridObject.
 * Implement this protocol to create Swift-based instances of TestObjectTSX.
 * ```swift
 * class HybridTestObjectTSX : HybridTestObjectTSXSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridTestObjectTSXSpec = HybridTestObjectTSXSpec_protocol & HybridTestObjectTSXSpec_base
